<Application x:Class="Bakery.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:Bakery"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
                <Setter Property="IsTabStop" Value="False"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Background="Transparent"
                                 Panel.ZIndex="2"/>
                                <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1" Focusable="False">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="searchTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="#ffffff" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="15 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 10" />
                <Setter Property="Padding" Value="10 7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#E0E6ED" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="PrimaryGrayColor" Color="#EBEAEF"/>
            <SolidColorBrush x:Key="SecundaryGrayColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TertiaryGrayColor" Color="#EAEAEA"/>

            <SolidColorBrush x:Key="BorderBrush" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="PrimaryTextColor" Color="#232323"/>
            <SolidColorBrush x:Key="SecundaryTextColor" Color="#FFFFFF"/>

            <SolidColorBrush x:Key="PrimaryBlueColor" Color="#14BDE3"/>
            <SolidColorBrush x:Key="SecundaryBlueColor" Color="#1467E3"/>


            <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Grid.Column="1"
                                                  Margin="0"
                                                  ContentSource="SelectedContent"/>
                                <StackPanel x:Name="HeaderPanel"
                                            Grid.Row="0"
                                            Margin="0 0 15 0"
                                            VerticalAlignment="Center"
                                            Panel.ZIndex="1"
                                            Background="Transparent"
                                            IsItemsHost="True"
                                            KeyboardNavigation.TabIndex="1"/>
                                <Border x:Name="Border"
                                        Grid.Row="1"
                                        BorderThickness="1"
                                        CornerRadius="10"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="Transparent"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>-->
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="Root" Width="200" Margin="5 0 0 5">
                                <Border x:Name="sBorder"
                                        CornerRadius="10"
                                        Width="197"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        HorizontalAlignment="Right"/>
                                <Grid Margin="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="6"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="iBorder"
                                            Grid.Column="0"
                                            CornerRadius="3"
                                            Width="6"
                                            Height="25"
                                            Background="Transparent"
                                            HorizontalAlignment="Left"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"/>
                                    <TextBlock x:Name="txtContent"
                                               Grid.Column="1"
                                               Margin="10 0 0 0"
                                               Foreground="{DynamicResource SecundaryTextColor}"
                                               Width="150"
                                               Padding="0 10.5"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"
                                               Text="{TemplateBinding Header}">
                                        <TextBlock.LayoutTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-360"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="sBorder" Property="Background" Value="{DynamicResource TertiaryGrayColor}"/>
                                    <Setter TargetName="iBorder" Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                                    <Setter TargetName="txtContent" Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="sBorder" Property="Background" Value="{DynamicResource SecundaryGrayColor}"/>
                                    <Setter TargetName="iBorder" Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
                                    <Setter TargetName="txtContent" Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource SecundaryTextColor}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="40" />
                
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10" Width="200">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource TertiaryGrayColor}" />
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="icon:PackIconMaterial">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="20 2 10 0"/>
            </Style>

            <Style x:Key="addButton" TargetType="Button">
                <Setter Property="Background" Value="Orange" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Width" Value="190" />
                <Setter Property="Margin" Value="0 20 0 0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FFBF00" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="gridEditButton" TargetType="Button">
                <Setter Property="Background" Value="#512DA8" />
                <Setter Property="BorderBrush" Value="#4A148C" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#673AB7" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#D32F2F" />
                <Setter Property="BorderBrush" Value="#B71C1C" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="gridButtonIcon" TargetType="icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
            </Style>

            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                                <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#222528"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="Margin" Value="0 10 0 0" />
                <Setter Property="Grid.Row" Value="2" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="SelectionUnit" Value="FullRow" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="ColumnWidth" Value="*" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                <Grid Grid.Column="1" Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0 4 0 0" />
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#623ED0"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#623ED0"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#dfdfdf"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#69717D" />
                <Setter Property="Margin" Value="15 0 15 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
